// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/Casper-Mars/cloud-restaurant/app/admin/internal/biz"
	"github.com/Casper-Mars/cloud-restaurant/app/admin/internal/conf"
	"github.com/Casper-Mars/cloud-restaurant/app/admin/internal/data"
	"github.com/Casper-Mars/cloud-restaurant/app/admin/internal/server"
	"github.com/Casper-Mars/cloud-restaurant/app/admin/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	client := data.NewEsClient(confData)
	dataData, cleanup, err := data.NewData(confData, logger, client)
	if err != nil {
		return nil, nil, err
	}
	commentRepo := data.NewCommentRepo(dataData, logger)
	commentUsecase := biz.NewCommentUsecase(logger, commentRepo)
	commentService := service.NewCommentService(logger, commentUsecase)
	httpServer := server.NewHTTPServer(confServer, logger, commentService)
	app := newApp(logger, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
